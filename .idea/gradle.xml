<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="delegatedBuild" value="false" />
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="gradleJvm" value="#JAVA_INTERNAL" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task/build/classes/java" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task/build/generated/sources/annotationProcessor/java" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task/build/generated/sources/headers/java" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task/build/reports/tests" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task/build/test-results" />
            <option value="$PROJECT_DIR$/ASCII Mirror/task/build/tmp" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Adding items" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/How to get an element by the index" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Output the list's elements" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Theory" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/What ArrayList can store" />
            <option value="$PROJECT_DIR$/Topics/Declaring functionality with interfaces/Area of a circle" />
            <option value="$PROJECT_DIR$/Topics/Declaring functionality with interfaces/Theory" />
            <option value="$PROJECT_DIR$/Topics/File class/Are siblings" />
            <option value="$PROJECT_DIR$/Topics/File class/Creating and verifying a text file" />
            <option value="$PROJECT_DIR$/Topics/File class/Non-existing location" />
            <option value="$PROJECT_DIR$/Topics/File class/Theory" />
            <option value="$PROJECT_DIR$/Topics/File class/Working with file data in Java" />
            <option value="$PROJECT_DIR$/Topics/File class/Ð¡orrect statements" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Initialize an object of a generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Theory" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Why generics" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Correct the program" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Creating instances" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Declaring generic classes" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Generic parameter values" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Pastry packing optimization" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Safekeeping Secrets in a Magic Box" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Theory" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Type arguments" />
            <option value="$PROJECT_DIR$/Topics/The Collections framework overview/Blacklist" />
            <option value="$PROJECT_DIR$/Topics/The Collections framework overview/Root interfaces" />
            <option value="$PROJECT_DIR$/Topics/The Collections framework overview/Squaring numbers" />
            <option value="$PROJECT_DIR$/Topics/The Collections framework overview/Supported collections" />
            <option value="$PROJECT_DIR$/Topics/The Collections framework overview/Theory" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Backward indexes" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Count the value occurrences" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Equal lists" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Mutable lists" />
            <option value="$PROJECT_DIR$/Topics/The List interface/The longest string in the list" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Theory" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Initialize a collection" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Theory" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Unsuitable types" />
            <option value="$PROJECT_DIR$/Topics/Wrapping classes. Boxing/Identify a possible exception" />
            <option value="$PROJECT_DIR$/Topics/Wrapping classes. Boxing/Only true or false" />
            <option value="$PROJECT_DIR$/Topics/Wrapping classes. Boxing/Theory" />
            <option value="$PROJECT_DIR$/util" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>